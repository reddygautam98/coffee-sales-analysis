{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reddy\\\\Downloads\\\\coffee-sales-analysis\\\\src\\\\components\\\\CafeDashboard.tsx\",\n  _s = $RefreshSig$();\n// filepath: /coffee-sales-analysis/src/components/CafeDashboard.tsx\nimport React, { useState, useEffect } from 'react';\nimport { Line, PieChart, Pie, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell, AreaChart, Area, ComposedChart, LabelList, Scatter } from 'recharts';\nimport { Users, DollarSign, ShoppingCart, Activity } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CafeDashboard = () => {\n  _s();\n  const [data, setData] = useState(null);\n\n  // Enhanced color palette\n  const COLORS = {\n    primary: '#4F46E5',\n    // Indigo\n    secondary: '#10B981',\n    // Emerald\n    accent: '#F59E0B',\n    // Amber\n    success: '#059669',\n    // Green\n    warning: '#DC2626',\n    // Red\n    info: '#0EA5E9',\n    // Sky\n    purple: '#7C3AED',\n    // Purple\n    pink: '#EC4899' // Pink\n  };\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch data from the provided source\n      const response = await fetch('C:/Users/reddy/Downloads/Coffe Sales Analysis/cafe_sales_data.csv');\n      const csvData = await response.text();\n      const parsedData = parseCSVData(csvData);\n\n      // Process the parsed data to fit the DashboardData structure\n      const processedData = processDashboardData(parsedData);\n      setData(processedData);\n    };\n    fetchData();\n  }, []);\n  const parseCSVData = csv => {\n    const lines = csv.split('\\n');\n    const headers = lines[0].split(',');\n    const rows = lines.slice(1).map(line => {\n      const values = line.split(',');\n      return headers.reduce((obj, header, index) => {\n        obj[header.trim()] = values[index].trim();\n        return obj;\n      }, {});\n    });\n    return rows;\n  };\n  const processDashboardData = rows => {\n    // Process the rows to calculate the required metrics\n    const totalSales = rows.reduce((sum, row) => sum + parseFloat(row['Total Price']), 0);\n    const customerCount = new Set(rows.map(row => row['Transaction ID'])).size;\n    const avgOrderValue = totalSales / customerCount;\n    const totalItems = rows.reduce((sum, row) => sum + parseInt(row['Quantity']), 0);\n    const salesGrowth = 15.4; // Placeholder value\n    const customerSatisfaction = 4.8; // Placeholder value\n\n    // Example data for charts\n    const hourlyData = Array.from({\n      length: 24\n    }, (_, i) => ({\n      hour: i,\n      sales: Math.random() * 5000 + 1000,\n      orders: Math.floor(Math.random() * 100 + 20),\n      customers: Math.floor(Math.random() * 80 + 15)\n    }));\n    const weeklyTrends = Array.from({\n      length: 7\n    }, (_, i) => ({\n      day: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'][i],\n      inStore: Math.random() * 3000 + 1000,\n      takeaway: Math.random() * 2000 + 800,\n      delivery: Math.random() * 1500 + 500\n    }));\n    const monthlyData = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'].map(month => ({\n      month,\n      sales: Math.random() * 20000 + 5000,\n      target: Math.random() * 22000 + 5500\n    }));\n    const timeBlockData = [{\n      name: 'Morning ‚òÄÔ∏è',\n      value: 35000,\n      customers: 1200\n    }, {\n      name: 'Afternoon üå§Ô∏è',\n      value: 45000,\n      customers: 1500\n    }, {\n      name: 'Evening üåô',\n      value: 25000,\n      customers: 800\n    }];\n    const productPerformance = [{\n      category: 'Coffee ‚òï',\n      sales: 85,\n      customer: 90,\n      profit: 80,\n      growth: 75\n    }, {\n      category: 'Tea ü´ñ',\n      sales: 70,\n      customer: 75,\n      profit: 85,\n      growth: 65\n    }, {\n      category: 'Pastries ü•ê',\n      sales: 90,\n      customer: 85,\n      profit: 90,\n      growth: 80\n    }, {\n      category: 'Sandwiches ü•™',\n      sales: 75,\n      customer: 80,\n      profit: 70,\n      growth: 85\n    }];\n    return {\n      totalSales,\n      customerCount,\n      avgOrderValue,\n      totalItems,\n      salesGrowth,\n      customerSatisfaction,\n      hourlyData,\n      weeklyTrends,\n      monthlyData,\n      timeBlockData,\n      productPerformance\n    };\n  };\n  const CustomLabel = ({\n    x,\n    y,\n    value,\n    stroke\n  }) => /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x,\n    y: y,\n    dy: -10,\n    fill: stroke,\n    fontSize: 12,\n    textAnchor: \"middle\",\n    fontWeight: \"600\",\n    children: typeof value === 'number' ? formatCurrency(value) : value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n  const MetricCard = ({\n    icon: Icon,\n    title,\n    value,\n    subValue,\n    color\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow-md border-l-4 hover:shadow-lg transition-shadow duration-200\",\n    style: {\n      borderLeftColor: color\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-sm font-medium\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold\",\n          style: {\n            color\n          },\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), subValue && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: subValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 rounded-full\",\n        style: {\n          backgroundColor: `${color}15`\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          size: 24,\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"Advanced Cafe Analytics Dashboard \\u2615\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: DollarSign,\n        title: \"Total Sales\",\n        value: formatCurrency(data.totalSales),\n        subValue: `Growth: +${data.salesGrowth}%`,\n        color: COLORS.success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: Users,\n        title: \"Total Customers\",\n        value: data.customerCount.toLocaleString(),\n        subValue: `Satisfaction: ‚≠ê ${data.customerSatisfaction}/5`,\n        color: COLORS.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: ShoppingCart,\n        title: \"Average Order Value\",\n        value: formatCurrency(data.avgOrderValue),\n        subValue: null,\n        color: COLORS.accent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: Activity,\n        title: \"Total Items Sold\",\n        value: data.totalItems.toLocaleString(),\n        subValue: null,\n        color: COLORS.purple\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-800\",\n          children: \"Sales vs Target \\uD83C\\uDFAF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(AreaChart, {\n            data: data.monthlyData,\n            children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n              children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n                id: \"salesGradient\",\n                x1: \"0\",\n                y1: \"0\",\n                x2: \"0\",\n                y2: \"1\",\n                children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                  offset: \"5%\",\n                  stopColor: COLORS.primary,\n                  stopOpacity: 0.8\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                  offset: \"95%\",\n                  stopColor: COLORS.primary,\n                  stopOpacity: 0.1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\",\n              stroke: \"#f0f0f0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"month\",\n              tick: {\n                fill: '#6B7280'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              tick: {\n                fill: '#6B7280'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              contentStyle: {\n                backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                borderRadius: '6px',\n                border: 'none',\n                boxShadow: '0 2px 5px rgba(0,0,0,0.1)'\n              },\n              formatter: value => formatCurrency(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Area, {\n              type: \"monotone\",\n              dataKey: \"sales\",\n              stroke: COLORS.primary,\n              fill: \"url(#salesGradient)\",\n              name: \"Actual Sales\",\n              children: /*#__PURE__*/_jsxDEV(LabelList, {\n                content: props => /*#__PURE__*/_jsxDEV(CustomLabel, {\n                  x: props.x,\n                  y: props.y,\n                  value: props.value,\n                  stroke: COLORS.primary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"target\",\n              stroke: COLORS.accent,\n              strokeWidth: 2,\n              name: \"Target\",\n              dot: {\n                r: 4,\n                fill: COLORS.accent\n              },\n              children: /*#__PURE__*/_jsxDEV(LabelList, {\n                content: ({\n                  x,\n                  y,\n                  value\n                }) => /*#__PURE__*/_jsxDEV(CustomLabel, {\n                  x: x,\n                  y: y,\n                  value: value,\n                  stroke: COLORS.accent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-800\",\n          children: \"Product Performance \\uD83D\\uDCC8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            children: [/*#__PURE__*/_jsxDEV(Pie, {\n              data: data.productPerformance,\n              dataKey: \"sales\",\n              nameKey: \"category\",\n              cx: \"50%\",\n              cy: \"50%\",\n              outerRadius: 100,\n              label: ({\n                name,\n                value\n              }) => `${name}: ${value}%`,\n              children: data.productPerformance.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                fill: Object.values(COLORS)[index]\n              }, `cell-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-800\",\n          children: \"Sales Channels \\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n            data: data.weeklyTrends,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\",\n              stroke: \"#f0f0f0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"day\",\n              tick: {\n                fill: '#6B7280'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              tick: {\n                fill: '#6B7280'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: value => formatCurrency(value),\n              contentStyle: {\n                backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                borderRadius: '6px',\n                border: 'none',\n                boxShadow: '0 2px 5px rgba(0,0,0,0.1)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Area, {\n              type: \"monotone\",\n              dataKey: \"inStore\",\n              fill: COLORS.primary,\n              stroke: COLORS.primary,\n              fillOpacity: 0.3,\n              name: \"In-Store\",\n              children: /*#__PURE__*/_jsxDEV(LabelList, {\n                content: ({\n                  x,\n                  y,\n                  value\n                }) => /*#__PURE__*/_jsxDEV(CustomLabel, {\n                  x: x,\n                  y: y,\n                  value: value,\n                  stroke: COLORS.primary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"takeaway\",\n              stroke: COLORS.secondary,\n              strokeWidth: 2,\n              name: \"Takeaway\",\n              children: /*#__PURE__*/_jsxDEV(LabelList, {\n                content: ({\n                  x,\n                  y,\n                  value\n                }) => /*#__PURE__*/_jsxDEV(CustomLabel, {\n                  x: x,\n                  y: y,\n                  value: value,\n                  stroke: COLORS.secondary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              dataKey: \"delivery\",\n              fill: COLORS.accent,\n              name: \"Delivery\",\n              children: /*#__PURE__*/_jsxDEV(LabelList, {\n                content: ({\n                  x,\n                  y,\n                  value\n                }) => /*#__PURE__*/_jsxDEV(CustomLabel, {\n                  x: x,\n                  y: y,\n                  value: value,\n                  stroke: COLORS.accent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-800\",\n          children: \"Time Block Analysis \\uD83D\\uDD52\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n            data: data.timeBlockData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\",\n              stroke: \"#f0f0f0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\",\n              tick: {\n                fill: '#6B7280'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              yAxisId: \"left\",\n              orientation: \"left\",\n              tick: {\n                fill: '#6B7280'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              yAxisId: \"right\",\n              orientation: \"right\",\n              tick: {\n                fill: '#6B7280'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              contentStyle: {\n                backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                borderRadius: '6px',\n                border: 'none',\n                boxShadow: '0 2px 5px rgba(0,0,0,0.1)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Area, {\n              yAxisId: \"left\",\n              dataKey: \"value\",\n              fill: COLORS.primary,\n              stroke: COLORS.primary,\n              fillOpacity: 0.3,\n              name: \"Sales\",\n              children: /*#__PURE__*/_jsxDEV(LabelList, {\n                content: ({\n                  x,\n                  y,\n                  value\n                }) => /*#__PURE__*/_jsxDEV(CustomLabel, {\n                  x: x,\n                  y: y,\n                  value: value,\n                  stroke: COLORS.primary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              yAxisId: \"right\",\n              type: \"monotone\",\n              dataKey: \"customers\",\n              stroke: COLORS.secondary,\n              strokeWidth: 2,\n              name: \"Customers\",\n              children: /*#__PURE__*/_jsxDEV(LabelList, {\n                content: ({\n                  x,\n                  y,\n                  value\n                }) => /*#__PURE__*/_jsxDEV(CustomLabel, {\n                  x: x,\n                  y: y,\n                  value: value,\n                  stroke: COLORS.secondary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(CafeDashboard, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = CafeDashboard;\nexport default CafeDashboard;\nvar _c;\n$RefreshReg$(_c, \"CafeDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","PieChart","Pie","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Cell","AreaChart","Area","ComposedChart","LabelList","Scatter","Users","DollarSign","ShoppingCart","Activity","jsxDEV","_jsxDEV","CafeDashboard","_s","data","setData","COLORS","primary","secondary","accent","success","warning","info","purple","pink","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","fetchData","response","fetch","csvData","text","parsedData","parseCSVData","processedData","processDashboardData","csv","lines","split","headers","rows","slice","map","line","values","reduce","obj","header","index","trim","totalSales","sum","row","parseFloat","customerCount","Set","size","avgOrderValue","totalItems","parseInt","salesGrowth","customerSatisfaction","hourlyData","Array","from","length","_","i","hour","sales","Math","random","orders","floor","customers","weeklyTrends","day","inStore","takeaway","delivery","monthlyData","month","target","timeBlockData","name","productPerformance","category","customer","profit","growth","CustomLabel","x","y","stroke","dy","fill","fontSize","textAnchor","fontWeight","children","fileName","_jsxFileName","lineNumber","columnNumber","MetricCard","icon","Icon","title","subValue","color","className","borderLeftColor","backgroundColor","toLocaleString","width","height","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","dataKey","tick","contentStyle","borderRadius","border","boxShadow","formatter","type","content","props","strokeWidth","dot","r","nameKey","cx","cy","outerRadius","label","entry","Object","fillOpacity","yAxisId","orientation","_c","$RefreshReg$"],"sources":["C:/Users/reddy/Downloads/coffee-sales-analysis/src/components/CafeDashboard.tsx"],"sourcesContent":["// filepath: /coffee-sales-analysis/src/components/CafeDashboard.tsx\nimport React, { useState, useEffect } from 'react';\nimport { \n  LineChart, Line, BarChart, Bar, PieChart, Pie, \n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, \n  Cell, RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis,\n  AreaChart, Area, ComposedChart, LabelList, Scatter\n} from 'recharts';\nimport { Coffee, Users, DollarSign, ShoppingCart, Clock, TrendingUp, Activity } from 'lucide-react';\n\nconst CafeDashboard = () => {\n  interface DashboardData {\n    totalSales: number;\n    customerCount: number;\n    avgOrderValue: number;\n    totalItems: number;\n    salesGrowth: number;\n    customerSatisfaction: number;\n    hourlyData: { hour: number; sales: number; orders: number; customers: number }[];\n    weeklyTrends: { day: string; inStore: number; takeaway: number; delivery: number }[];\n    monthlyData: { month: string; sales: number; target: number }[];\n    timeBlockData: { name: string; value: number; customers: number }[];\n    productPerformance: { category: string; sales: number; customer: number; profit: number; growth: number }[];\n  }\n\n  const [data, setData] = useState<DashboardData | null>(null);\n  \n  // Enhanced color palette\n  const COLORS = {\n    primary: '#4F46E5',    // Indigo\n    secondary: '#10B981',  // Emerald\n    accent: '#F59E0B',     // Amber\n    success: '#059669',    // Green\n    warning: '#DC2626',    // Red\n    info: '#0EA5E9',       // Sky\n    purple: '#7C3AED',     // Purple\n    pink: '#EC4899'        // Pink\n  };\n  \n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch data from the provided source\n      const response = await fetch('C:/Users/reddy/Downloads/Coffe Sales Analysis/cafe_sales_data.csv');\n      const csvData = await response.text();\n      const parsedData = parseCSVData(csvData);\n\n      // Process the parsed data to fit the DashboardData structure\n      const processedData = processDashboardData(parsedData);\n\n      setData(processedData);\n    };\n\n    fetchData();\n  }, []);\n\n  const parseCSVData = (csv) => {\n    const lines = csv.split('\\n');\n    const headers = lines[0].split(',');\n    const rows = lines.slice(1).map(line => {\n      const values = line.split(',');\n      return headers.reduce((obj, header, index) => {\n        obj[header.trim()] = values[index].trim();\n        return obj;\n      }, {});\n    });\n    return rows;\n  };\n\n  const processDashboardData = (rows) => {\n    // Process the rows to calculate the required metrics\n    const totalSales = rows.reduce((sum, row) => sum + parseFloat(row['Total Price']), 0);\n    const customerCount = new Set(rows.map(row => row['Transaction ID'])).size;\n    const avgOrderValue = totalSales / customerCount;\n    const totalItems = rows.reduce((sum, row) => sum + parseInt(row['Quantity']), 0);\n    const salesGrowth = 15.4; // Placeholder value\n    const customerSatisfaction = 4.8; // Placeholder value\n\n    // Example data for charts\n    const hourlyData = Array.from({length: 24}, (_, i) => ({\n      hour: i,\n      sales: Math.random() * 5000 + 1000,\n      orders: Math.floor(Math.random() * 100 + 20),\n      customers: Math.floor(Math.random() * 80 + 15)\n    }));\n\n    const weeklyTrends = Array.from({length: 7}, (_, i) => ({\n      day: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'][i],\n      inStore: Math.random() * 3000 + 1000,\n      takeaway: Math.random() * 2000 + 800,\n      delivery: Math.random() * 1500 + 500\n    }));\n\n    const monthlyData = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'].map(month => ({\n      month,\n      sales: Math.random() * 20000 + 5000,\n      target: Math.random() * 22000 + 5500\n    }));\n\n    const timeBlockData = [\n      { name: 'Morning ‚òÄÔ∏è', value: 35000, customers: 1200 },\n      { name: 'Afternoon üå§Ô∏è', value: 45000, customers: 1500 },\n      { name: 'Evening üåô', value: 25000, customers: 800 }\n    ];\n\n    const productPerformance = [\n      { category: 'Coffee ‚òï', sales: 85, customer: 90, profit: 80, growth: 75 },\n      { category: 'Tea ü´ñ', sales: 70, customer: 75, profit: 85, growth: 65 },\n      { category: 'Pastries ü•ê', sales: 90, customer: 85, profit: 90, growth: 80 },\n      { category: 'Sandwiches ü•™', sales: 75, customer: 80, profit: 70, growth: 85 }\n    ];\n\n    return {\n      totalSales,\n      customerCount,\n      avgOrderValue,\n      totalItems,\n      salesGrowth,\n      customerSatisfaction,\n      hourlyData,\n      weeklyTrends,\n      monthlyData,\n      timeBlockData,\n      productPerformance\n    };\n  };\n\n  const CustomLabel = ({ x, y, value, stroke }) => (\n    <text \n      x={x} \n      y={y} \n      dy={-10} \n      fill={stroke}\n      fontSize={12}\n      textAnchor=\"middle\"\n      fontWeight=\"600\"\n    >\n      {typeof value === 'number' ? formatCurrency(value) : value}\n    </text>\n  );\n\n  const MetricCard = ({ icon: Icon, title, value, subValue, color }) => (\n    <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 hover:shadow-lg transition-shadow duration-200\" \n         style={{ borderLeftColor: color }}>\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <p className=\"text-gray-500 text-sm font-medium\">{title}</p>\n          <p className=\"text-2xl font-bold\" style={{ color }}>{value}</p>\n          {subValue && <p className=\"text-sm text-gray-600\">{subValue}</p>}\n        </div>\n        <div className=\"p-2 rounded-full\" style={{ backgroundColor: `${color}15` }}>\n          <Icon size={24} color={color} />\n        </div>\n      </div>\n    </div>\n  );\n\n  if (!data) return <div>Loading...</div>;\n\n  return (\n    <div className=\"p-6 bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 min-h-screen\">\n      <h1 className=\"text-3xl font-bold mb-6 text-gray-800\">Advanced Cafe Analytics Dashboard ‚òï</h1>\n      \n      {/* Metrics Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n        <MetricCard\n          icon={DollarSign}\n          title=\"Total Sales\"\n          value={formatCurrency(data.totalSales)}\n          subValue={`Growth: +${data.salesGrowth}%`}\n          color={COLORS.success}\n        />\n        <MetricCard\n          icon={Users}\n          title=\"Total Customers\"\n          value={data.customerCount.toLocaleString()}\n          subValue={`Satisfaction: ‚≠ê ${data.customerSatisfaction}/5`}\n          color={COLORS.primary}\n        />\n        <MetricCard\n          icon={ShoppingCart}\n          title=\"Average Order Value\"\n          value={formatCurrency(data.avgOrderValue)}\n          subValue={null}\n          color={COLORS.accent}\n        />\n        <MetricCard\n          icon={Activity}\n          title=\"Total Items Sold\"\n          value={data.totalItems.toLocaleString()}\n          subValue={null}\n          color={COLORS.purple}\n        />\n      </div>\n\n      {/* Charts Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Sales vs Target */}\n        <div className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\">\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Sales vs Target üéØ</h2>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <AreaChart data={data.monthlyData}>\n              <defs>\n                <linearGradient id=\"salesGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor={COLORS.primary} stopOpacity={0.8}/>\n                  <stop offset=\"95%\" stopColor={COLORS.primary} stopOpacity={0.1}/>\n                </linearGradient>\n              </defs>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n              <XAxis dataKey=\"month\" tick={{ fill: '#6B7280' }} />\n              <YAxis tick={{ fill: '#6B7280' }} />\n              <Tooltip \n                contentStyle={{\n                  backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                  borderRadius: '6px',\n                  border: 'none',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.1)'\n                }}\n                formatter={(value) => formatCurrency(value)}\n              />\n              <Legend />\n              <Area \n                type=\"monotone\" \n                dataKey=\"sales\" \n                stroke={COLORS.primary} \n                fill=\"url(#salesGradient)\" \n                name=\"Actual Sales\"\n              >\n                <LabelList content={(props) => <CustomLabel x={props.x} y={props.y} value={props.value} stroke={COLORS.primary} />} />\n              </Area>\n              <Line \n                type=\"monotone\" \n                dataKey=\"target\" \n                stroke={COLORS.accent} \n                strokeWidth={2}\n                name=\"Target\"\n                dot={{ r: 4, fill: COLORS.accent }}\n              >\n                <LabelList content={({ x, y, value }) => <CustomLabel x={x} y={y} value={value} stroke={COLORS.accent} />} />\n              </Line>\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Product Performance */}\n        <div className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\">\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Product Performance üìà</h2>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart>\n              <Pie\n                data={data.productPerformance}\n                dataKey=\"sales\"\n                nameKey=\"category\"\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={100}\n                label={({ name, value }) => `${name}: ${value}%`}\n              >\n                {data.productPerformance.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={Object.values(COLORS)[index]} />\n                ))}\n              </Pie>\n              <Tooltip />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Weekly Sales Channels */}\n        <div className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\">\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Sales Channels üìä</h2>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <ComposedChart data={data.weeklyTrends}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n              <XAxis dataKey=\"day\" tick={{ fill: '#6B7280' }} />\n              <YAxis tick={{ fill: '#6B7280' }} />\n              <Tooltip \n                formatter={(value) => formatCurrency(value)}\n                contentStyle={{\n                  backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                  borderRadius: '6px',\n                  border: 'none',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.1)'\n                }}\n              />\n              <Legend />\n              <Area \n                type=\"monotone\"\n                dataKey=\"inStore\" \n                fill={COLORS.primary} \n                stroke={COLORS.primary}\n                fillOpacity={0.3}\n                name=\"In-Store\"\n              >\n                <LabelList content={({ x, y, value }) => <CustomLabel x={x} y={y} value={value} stroke={COLORS.primary} />} />\n              </Area>\n              <Line \n                type=\"monotone\"\n                dataKey=\"takeaway\" \n                stroke={COLORS.secondary}\n                strokeWidth={2}\n                name=\"Takeaway\"\n              >\n                <LabelList content={({ x, y, value }) => <CustomLabel x={x} y={y} value={value} stroke={COLORS.secondary} />} />\n              </Line>\n              <Scatter \n                dataKey=\"delivery\" \n                fill={COLORS.accent}\n                name=\"Delivery\"\n              >\n                <LabelList content={({ x, y, value }) => <CustomLabel x={x} y={y} value={value} stroke={COLORS.accent} />} />\n              </Scatter>\n            </ComposedChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Time Block Analysis */}\n        <div className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200\">\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Time Block Analysis üïí</h2>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <ComposedChart data={data.timeBlockData}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n              <XAxis dataKey=\"name\" tick={{ fill: '#6B7280' }} />\n              <YAxis yAxisId=\"left\" orientation=\"left\" tick={{ fill: '#6B7280' }} />\n              <YAxis yAxisId=\"right\" orientation=\"right\" tick={{ fill: '#6B7280' }} />\n              <Tooltip \n                contentStyle={{\n                  backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                  borderRadius: '6px',\n                  border: 'none',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.1)'\n                }}\n              />\n              <Legend />\n              <Area\n                yAxisId=\"left\"\n                dataKey=\"value\"\n                fill={COLORS.primary}\n                stroke={COLORS.primary}\n                fillOpacity={0.3}\n                name=\"Sales\"\n              >\n                <LabelList content={({ x, y, value }) => <CustomLabel x={x} y={y} value={value} stroke={COLORS.primary} />} />\n              </Area>\n              <Line\n                yAxisId=\"right\"\n                type=\"monotone\"\n                dataKey=\"customers\"\n                stroke={COLORS.secondary}\n                strokeWidth={2}\n                name=\"Customers\"\n              >\n                <LabelList content={({ x, y, value }) => <CustomLabel x={x} y={y} value={value} stroke={COLORS.secondary} />} />\n              </Line>\n            </ComposedChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CafeDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}